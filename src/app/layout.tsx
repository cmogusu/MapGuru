import { Suspense } from "react";
import { NextAppProvider } from "@toolpad/core/nextjs";
import { Geist, Geist_Mono } from "next/font/google";
import LinearProgress from "@mui/material/LinearProgress";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v15-appRouter";
import DashboardIcon from "@mui/icons-material/Dashboard";
import ShoppingCartIcon from "@mui/icons-material/ShoppingCart";
import BarChartIcon from "@mui/icons-material/BarChart";
import DescriptionIcon from "@mui/icons-material/Description";
import type { Metadata } from "next";
import type { Branding, Navigation } from "@toolpad/core/AppProvider";
import Image from "next/image";

import "./globals.css";

const geistSans = Geist({
	variable: "--font-geist-sans",
	subsets: ["latin"],
});

const geistMono = Geist_Mono({
	variable: "--font-geist-mono",
	subsets: ["latin"],
});

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

const navigation: Navigation = [
	{
		kind: "header",
		title: "Main items",
	},
	{
		segment: "mapbox",
		title: "Mapbox",
		icon: <DashboardIcon />,
	},
	{
		segment: "maplibre",
		title: "Maplibre",
		icon: <ShoppingCartIcon />,
	},
	{
		kind: "header",
		title: "Google",
	},
	{
		segment: "googleMaps",
		title: "Google Maps",
		icon: <BarChartIcon />,
		children: [
			{
				segment: "googleEarth",
				title: "KML",
				icon: <DescriptionIcon />,
			},
			{
				segment: "traffic",
				title: "Traffic",
				icon: <DescriptionIcon />,
			},
		],
	},
	{
		segment: "cesium",
		title: "Cesium",
		icon: <BarChartIcon />,
		children: [
			{
				segment: "googleEarth",
				title: "KML",
				icon: <DescriptionIcon />,
			},
			{
				segment: "traffic",
				title: "Traffic",
				icon: <DescriptionIcon />,
			},
		],
	},
];

const branding: Branding = {
	logo: (
		<Image
			src="/mapguru-small-logo.png"
			alt="MapGuru Logo"
			width={200}
			height={50}
		/>
	),
	title: "The maps experts",
	homeUrl: "/",
};

export default function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	return (
		<html lang="en">
			<head>
				<meta charSet="utf-8" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<meta name="theme-color" content="#111" />
				<meta name="color-scheme" content="dark light" />
				{/* <style dangerouslySetInnerHTML={{ __html: themeStyles }} /> */}
			</head>
			<body
				className={`${geistSans.variable} ${geistMono.variable} antialiased`}
			>
				<AppRouterCacheProvider options={{ enableCssLayer: true }}>
					<Suspense fallback={<LinearProgress />}>
						<NextAppProvider navigation={navigation} branding={branding}>
							{children}
						</NextAppProvider>
					</Suspense>
				</AppRouterCacheProvider>
			</body>
		</html>
	);
}
